# Generated by Django 4.2.16 on 2025-03-21 12:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Organisation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("picture", models.CharField(blank=True, max_length=255, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("profile_picture", models.URLField(blank=True, null=True)),
                ("biography", models.TextField(blank=True, null=True)),
                ("ecological_area", models.JSONField(blank=True, null=True)),
                ("subject_area", models.JSONField(blank=True, default=list, null=True)),
                ("variant", models.JSONField(blank=True, null=True)),
                (
                    "area_of_expertise",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                ("willing_peer_review", models.BooleanField(default=False)),
                ("willing_allyship", models.BooleanField(default=False)),
                ("willing_seminar", models.BooleanField(default=False)),
                ("willing_PHDhelper", models.BooleanField(default=False)),
                ("is_ambassador", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Professor", "Professor"),
                            ("Researcher", "Researcher"),
                            ("NatureScot Staff", "NatureScot Staff"),
                            ("Undergraduate", "Undergraduate"),
                            ("Postgraduate", "Postgraduate"),
                            ("Ambassador", "Ambassador"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "email_verification_token",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "email_verification_sent_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("is_complete", models.BooleanField(default=False)),
                (
                    "affiliation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="handshake.organisation",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VIP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("theme", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "subject_area",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "area_of_expertise",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "preferred_interests_and_skills",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "preparation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("goals", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "specific_issues_addressed",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("methods", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "data_available",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "field_lab_work",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "meeting_schedule",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "meeting_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "partner_sponsor",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "file_upload",
                    models.FileField(
                        blank=True, default="", null=True, upload_to="vip_uploads/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "lead_investigator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="handshake.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PostEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("event_date", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by_username",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "event_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Seminar", "Seminar"),
                            ("Collaboration Meeting", "Collaboration Meeting"),
                            ("Research Presentation", "Research Presentation"),
                            ("Conference", "Conference"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "subject_area",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Animal Physiology", "Animal Physiology"),
                            ("Behavioural ecology", "Behavioural ecology"),
                            ("Movement ecology", "Movement ecology"),
                            ("Population ecology", "Population ecology"),
                            ("Community ecology", "Community ecology"),
                            ("Plant ecology", "Plant ecology"),
                            ("Freshwater ecology", "Freshwater ecology"),
                            ("Vector ecology", "Vector ecology"),
                            ("Aquaculture", "Aquaculture"),
                            ("Agroecology", "Agroecology"),
                            ("Statistical ecology", "Statistical ecology"),
                            ("Theoretical ecology", "Theoretical ecology"),
                            ("Environmental change", "Environmental change"),
                            ("Population genetics", "Population genetics"),
                            ("Evolutionary ecology", "Evolutionary ecology"),
                            ("Disease ecology", "Disease ecology"),
                            ("Animal welfare", "Animal welfare"),
                            ("One Health", "One Health"),
                            ("Conservation biology", "Conservation biology"),
                            (
                                "Pollution biology/Toxicology",
                                "Pollution biology/Toxicology",
                            ),
                            ("Environment economics", "Environment economics"),
                            ("Biogeography", "Biogeography"),
                            ("Taxonomy/Systematics", "Taxonomy/Systematics"),
                            ("Genetics", "Genetics"),
                            ("Carbon cycling", "Carbon cycling"),
                            (
                                "Social/Human Behavioural Scientist",
                                "Social/Human Behavioural Scientist",
                            ),
                            ("Environmental Education", "Environmental Education"),
                            ("Geologist", "Geologist"),
                            ("Geomorphologist", "Geomorphologist"),
                            ("Data Scientist", "Data Scientist"),
                            ("Geographer", "Geographer"),
                            (
                                "Geographical Information Systems expert",
                                "Geographical Information Systems expert",
                            ),
                            ("Marine (offshore)", "Marine (offshore)"),
                            ("Marine (intertidal)", "Marine (intertidal)"),
                            ("Coastal", "Coastal"),
                            ("Upland", "Upland"),
                            ("Lowland", "Lowland"),
                            ("Forest/Woodland", "Forest/Woodland"),
                            ("Limnology", "Limnology"),
                            ("Soils", "Soils"),
                            ("Peatland", "Peatland"),
                            ("Estuarine", "Estuarine"),
                            ("Tundra", "Tundra"),
                            ("Wetland", "Wetland"),
                            ("Urban", "Urban"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "area_of_expertise",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Zoology", "Zoology"),
                            ("Plant Scientist", "Plant Scientist"),
                            ("Microbiology", "Microbiology"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("image", models.URLField(blank=True, null=True)),
                (
                    "post_or_event",
                    models.CharField(
                        choices=[("Post", "Post"), ("Event", "Event")],
                        default="Post",
                        max_length=50,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="handshake.userprofile",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="organisation",
            name="ambassador",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="handshake.userprofile",
            ),
        ),
    ]
